---
- name: Install PostgreSQL and psycopg2
  package:
    name:
      - postgresql-server
      - postgresql-contrib
      - python3-psycopg2
    state: present
  become: yes

- name: Initialize PostgreSQL (if needed)
  stat:
    path: /var/lib/pgsql/data/PG_VERSION
  register: postgres_data

- name: Init DB if first time
  command: postgresql-setup --initdb --unit postgresql
  when: not postgres_data.stat.exists
  become: yes

- name: Start and enable PostgreSQL
  systemd:
    name: postgresql
    state: started
    enabled: yes
  become: yes

- name: Set postgres password
  become: yes
  become_user: postgres
  shell: |
    psql -c "ALTER USER postgres WITH PASSWORD '{{ postgres_admin_password }}';"
  no_log: true

- name: Create Application DB
  become: yes
  become_user: postgres
  postgresql_db:
    name: "{{ app_database_name }}"
    encoding: UTF8
    state: present

- name: Create Application User
  become: yes
  become_user: postgres
  community.postgresql.postgresql_user:
    name: "{{ app_database_user }}"
    password: "{{ app_database_password }}"
    db: "{{ app_database_name }}"
    role_attr_flags: "LOGIN"
    state: present

- name: Grant privileges on application DB to user
  become: yes
  become_user: postgres
  community.postgresql.postgresql_privs:
    db: "{{ app_database_name }}"
    type: database
    privs: ALL
    objs: "{{ app_database_name }}"
    roles: "{{ app_database_user }}"

- name: Harden pg_hba.conf
  lineinfile:
    path: /var/lib/pgsql/data/pg_hba.conf
    regexp: '^host\s+all\s+all\s+127\.0\.0\.1/32\s+'
    line: 'host    all             all             127.0.0.1/32            md5'
    backup: yes
  become: yes

- name: Set listen_addresses to localhost
  lineinfile:
    path: /var/lib/pgsql/data/postgresql.conf
    regexp: '^#?listen_addresses'
    line: "listen_addresses = 'localhost'"
    backup: yes
  become: yes

- name: Restart PostgreSQL
  systemd:
    name: postgresql
    state: restarted
  become: yes
